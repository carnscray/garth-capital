---
export const prerender = true;


import Banner from '~/components/Banner.astro';
import Breadcrumb from '~/components/Breadcrumb.astro';
import Layout from '~/layouts/Layout.astro';
import client from '~/lib/contentful';

export async function getStaticPaths() {
  const response = await client.getEntries({ content_type: 'triviaLocation' });

  const regions = Array.from(
    new Set(response.items.map((item) => item.fields.locationRegionIsoSlug))
  );

  return regions.map((regionIsoSlug) => ({
    params: { regionIsoSlug }
  }));
}

const { regionIsoSlug } = Astro.params;

const response = await client.getEntries({
  content_type: 'triviaLocation',
  include: 1
});

// Build a map of towns with park counts
const townMap = new Map();

response.items.forEach((item) => {
  const fields = item.fields;

  if (fields.locationRegionIsoSlug === regionIsoSlug) {
    const townSlug = fields.locationTownSlug;
    const townName = fields.locationTown;

    if (townMap.has(townSlug)) {
      townMap.get(townSlug).count += 1;
    } else {
      townMap.set(townSlug, {
        name: townName,
        slug: townSlug,
        count: 1
      });
    }
  }
});

const uniqueTowns = Array.from(townMap.values());

// âœ… Sort towns alphabetically by display name
uniqueTowns.sort((a, b) => a.name.localeCompare(b.name));

const regionName = response.items.find(
  (item) => item.fields.locationRegionIsoSlug === regionIsoSlug
)?.fields.locationRegion ?? regionIsoSlug;

const breadcrumbs = [
  { name: 'Locations', href: '/find' },
  { name: regionName },
];

// SEO Values //
const pageTitle =  regionName + " | Know Brainer Trivia"
const pageDescription = "Discover a Know Brainer Trivia location near you in "+ regionName + "."


---

<Layout title={pageTitle} description={pageDescription}>
  <Banner />

  <div class="max-w-4xl mx-auto pt-4 pb-0 text-center sm:text-left">
    <Breadcrumb items={breadcrumbs} />
  </div>

<section class="p-6 max-w-4xl mx-auto space-y-6">
  <h1 class="text-2xl font-bold text-gray-900">
    Locations in {regionName}
  </h1>

  {uniqueTowns.length === 0 ? (
    <div class="text-center text-gray-500 text-lg py-12">
      No towns found for this region.
    </div>
  ) : (
    <div class="grid grid-cols-2 sm:grid-cols-3 gap-4">
      {uniqueTowns.map((town) => (
        <a
          href={`/locations/${regionIsoSlug}/${town.slug}`}
          class="block bg-white border border-gray-200 shadow-sm rounded-lg overflow-hidden hover:shadow-md transition text-center"
        >

          <div class="p-4">
            <div class="text-lg font-medium text-gray-800">
              {town.name} ({town.count})
            </div>
          </div>
        </a>
      ))}
    </div>
  )}
</section>

</Layout>

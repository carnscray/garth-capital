---
const { post } = Astro.props;
// post shape:
// { title, slug, imageUrl, imageAlt, authorName, authorSlug, authorImg, summary, published }

// Helper: 12-Jun-2025
const formatDate = (dateLike: string | Date) => {
  const d = new Date(dateLike);
  if (isNaN(d as unknown as number)) return '';
  const dd = String(d.getDate()).padStart(2, '0');
  const m = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'][d.getMonth()];
  return `${dd}-${m}-${d.getFullYear()}`;
};
---

<div class="flex flex-col bg-white rounded-2xl overflow-hidden shadow-lg transition w-full max-w-sm text-left">
  <a href={`/blog/${post.slug}`}>
    {post.imageUrl && (
      <img
        src={post.imageUrl}
        alt={post.imageAlt ?? post.title}
        class="w-full aspect-square object-cover"
      />
    )}
  </a>

  <div class="flex flex-col justify-between h-full p-6">
    <div>
      <a href={`/blog/${post.slug}`}>
        <div class="text-2xl font-bold text-charcoal mb-2 hover:underline">
          {post.title}
        </div>
      </a>

      {post.summary && (
        <p class="text-lg text-charcoal mb-3 font-light">
          {post.summary}
        </p>
      )}
    </div>

    <div class="flex items-center gap-2 text-sm text-charcoal mt-1">
      {post.authorImg && (
        <a href={post.authorSlug ? `/contributors/${post.authorSlug}` : undefined}>
          <img
            src={post.authorImg}
            alt={post.authorName}
            class="w-12 h-12 rounded-full object-cover"
          />
        </a>
      )}

      {post.authorSlug ? (
        <a href={`/contributors/${post.authorSlug}`} class="hover:underline">
          {post.authorName}
        </a>
      ) : (
        <span>{post.authorName}</span>
      )}

      {post.published && (
        <>
          <span class="mx-2 text-charcoal/60">|</span>
          <time datetime={new Date(post.published).toISOString()}>
            {formatDate(post.published)}
          </time>
        </>
      )}
    </div>
  </div>
</div>

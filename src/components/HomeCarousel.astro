---
const { locations } = Astro.props;
---

<section class="py-16 px-0 bg-stone rounded-4xl mx-4 lg:mx-12 overflow-x-hidden">
  <div class="max-w-7xl mx-auto px-4 py-12 bg-stone">
    <h2 class="text-7xl lg:text-8xl pb-0 font-bold text-main mb-4 text-center">Locations.</h2>

    <div class="mt-0 mb-4  flex justify-center">
      <a 
        href="/locations" 
        class="inline-block w-64 mx-auto px-4 py-2 rounded-xl text-center text-charcoal hover:bg-stone hover:underline transition"
      >
        View All
      </a>
    </div>

    <div class="grid grid-cols-2 sm:grid-cols-3 lg:grid-cols-4 gap-6">
      {locations.map((loc) => {
        const square = loc.fields.locationSquare;
        const imageUrl = square?.fields?.file?.url
          ? `https:${square.fields.file.url}`
          : '/placeholder.jpg';

        const days = [
          loc.fields.locationIsMon && 'MON',
          loc.fields.locationIsTue && 'TUE',
          loc.fields.locationIsWed && 'WED',
          loc.fields.locationIsThu && 'THU',
          loc.fields.locationIsFri && 'FRI',
          loc.fields.locationIsSat && 'SAT',
          loc.fields.locationIsSun && 'SUN',
        ].filter(Boolean).join(', ');

        return (
          // The card itself clips any hover growth and prevents width blowout
          <div class="min-w-0 text-center overflow-hidden">
            <a
              href={`/locations/${loc.fields.locationRegionIsoSlug}/${loc.fields.locationTownSlug}/${loc.fields.locationNameSlug}`}
              class="group block relative overflow-hidden"
            >
              <div class="relative w-36 h-36 mx-auto rounded-full overflow-hidden">
                <img
                  src={imageUrl}
                  alt={loc.fields.locationImageAltText || loc.fields.locationShortname}
                  width="144"
                  height="144"
                  loading="lazy"
                  decoding="async"
                  class="w-full h-full object-cover transition-transform duration-300 will-change-transform transform-gpu group-hover:scale-105"
                />
                <div class="absolute inset-0 bg-white opacity-0 group-hover:opacity-10 transition-opacity duration-300"></div>
              </div>

              {/* Use translate instead of scale to avoid horizontal overflow */}
              <h2 class="mt-3 font-semibold text-3xl text-second inline-block transition-transform duration-200 group-hover:translate-y-0.5">
                {loc.fields.locationShortname?.toUpperCase()}
              </h2>
            </a>

            {loc.fields.locationTown && (
              <p class="text-charcoal font-bold text-lg mt-1 truncate">
                {loc.fields.locationTown?.toUpperCase()}
              </p>
            )}

            {/* Optional: Day and time
            <p class="text-charcoal text-lg">
              {days}{loc.fields.locationTime ? `  ${loc.fields.locationTime}` : ''}
            </p>
            */}
          </div>
        );
      })}
    </div>
  </div>
</section>
